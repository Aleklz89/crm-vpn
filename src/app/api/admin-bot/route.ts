import { Bot, webhookCallback } from 'grammy'; 
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();
const token = process.env.TELEGRAM_ADMIN_BOT_TOKEN;
if (!token) throw new Error('TELEGRAM_BOT_TOKEN not found.');

const bot = new Bot(token);

bot.command('start', async (ctx) => {
  if (ctx.message?.text) {  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç —Ç–µ–∫—Å—Ç
    const args = ctx.message.text.split(' ');
    if (args.length > 1) {
      const inviteToken = args[1].replace('invite_', ''); // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ "/start"
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π —Ç–æ–∫–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const moderator = await prisma.moderator.findFirst({
        where: {
          inviteToken, // –¢–æ–∫–µ–Ω —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –≤ —Å—Å—ã–ª–∫–µ
          telegramId: null, // –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        },
      });

      if (moderator) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –¥–æ–±–∞–≤–ª—è—è telegramId
        await prisma.moderator.update({
          where: { id: moderator.id },
          data: { telegramId: BigInt(ctx.from.id) }, // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º Telegram ID
        });

        await ctx.reply(`üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.from.username}! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω–æ–º–æ—á–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.`);
      } else {
        await ctx.reply('–ù–µ–≤–µ—Ä–Ω–∞—è –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞.');
      }
    } else {
      await ctx.reply('üëã –≠—Ç–æ –±–æ—Ç –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤!');
    }
  } else {
    await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
  }
});

// Webhook –¥–ª—è Next.js
export const POST = webhookCallback(bot, 'std/http');
